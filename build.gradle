/*
 * Copyright 2008-2013 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'idea'

subprojects {
    apply plugin: 'idea'
    apply plugin: 'groovy'
    apply plugin: 'maven'

    sourceCompatibility = '1.5'
    targetCompatibility = '1.5'

    configurations {
        deployerJars
    }

    repositories {
        mavenCentral()
        mavenRepo url: 'http://repository.codehaus.org'
        mavenRepo url: 'http://repository.sonatype.org/content/groups/public'
        mavenRepo url: 'https://repository.jboss.org/nexus/content/groups/public-jboss'
    }

    dependencies {
        groovy "org.codehaus.groovy:groovy-all:$groovyVersion"
        compile "org.codehaus.groovy:groovy-all:$groovyVersion"
        testCompile "junit:junit:4.10"
        deployerJars 'org.apache.maven.wagon:wagon-webdav:1.0-beta-2',
            'org.apache.maven:maven-ant-tasks:2.1.0'
    }

    configure([compileGroovy, compileTestGroovy]) {
        groovyOptions.fork(memoryInitialSize: '128M', memoryMaximumSize: '1G')
        groovyOptions.encoding = "UTF-8"
    }

    configure([compileJava, compileTestJava]) {
        options.deprecation = true
        options.debug = true
    }

    metaInf << fileTree(dir: project(':').file('.'), includes: ['LICENSE.txt'])

    if (!project.hasProperty('projectName')) projectName = 'Gfxbuilder'
    if (!project.hasProperty('projectDescription')) projectDescription = 'Gfxbuilder-core: build Java2D drawings with Groovy'
    jar {
        manifest {
            attributes(
                'Built-By': System.properties['user.name'],
                'Created-By': System.properties['java.vm.version'] + " (" + System.properties['java.vm.vendor'] + ")",
                'Implementation-Version': version,
                'Implementation-Vendor': 'griffon.codehaus.org',
                'Implementation-Title': projectName
            )
        }
    }

    artifacts {
        archives jar
    }

    installer = install.repositories.mavenInstaller
    def deployer = null

    if (!project.hasProperty('codehausUsername')) codehausUsername = ''
    if (!project.hasProperty('codehausPassword')) codehausPassword = ''

    uploadArchives {
        repositories {
            deployer = mavenDeployer {
                name = 'codehausDeployer'
                configuration = configurations.deployerJars
                uploadDescriptor = true
                repository(url: codehausReleaseUrl) {
                    authentication(userName: codehausUsername, password: codehausPassword)
                }
                snapshotRepository(url: codehausSnapshotUrl) {
                    uniqueVersion = false
                    authentication(userName: codehausUsername, password: codehausPassword)
                }
            }
        }
    }

    [installer, deployer].each { repo ->
        configure(repo) {
            pom.project {
                name projectName
                description projectDescription
                url('http://griffon.codehaus.org/GfxBuilder')
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }
                repositories {
                    repository {
                        id('codehaus-release')
                        name('Codehaus')
                        url('http://repository.codehaus.org')
                    }
                    repository {
                        id('sonatype-release')
                        name('Sonatype')
                        url('http://repository.sonatype.org/content/groups/public')
                    }
                    repository {
                        id('jboss-release')
                        name('JBoss')
                        url('https://repository.jboss.org/nexus/content/groups/public-jboss')
                    }
                }
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.3'
    jarFile = 'gradle/wrapper/gradle-wrapper.jar'
}
